<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iflytek.om.dao.MusicDao">

	<resultMap type="Music" id="musicmap1">
		<id column="mid" property="id"/>
		<result column="name" property="name"/>
		<result column="singer" property="singer"/>
		<result column="special" property="special"/>
		<result column="uploadtime" property="uploadTime"/>
		<result column="uploadname" property="uploadName"/>
		
		<association property="uploadUser" javaType="User">
			<id column="uid" property="id"/>
			<result column="username" property="username"/>
		</association>
	</resultMap>
	
	
	<resultMap type="MusicVO" id="musicmap2">
		<id column="mid" property="id"/>
		<result column="name" property="name"/>
		<result column="singer" property="singer"/>
		<result column="special" property="special"/>
		<result column="uploadtime" property="uploadTime"/>
		<result column="uploadname" property="uploadName"/>
		<result column="count" property="collection"/>
		
		<association property="uploadUser" javaType="User">
			<id column="uid" property="id"/>
			<result column="username" property="username"/>
		</association>
	</resultMap>
	
	<sql id="sql1">
		select 
			m.id as mid,
			m.name,
			m.singer,
			m.special,
			m.uploadtime,
			m.uploadname,
			u.id as uid,
			u.username  
		from t_music m inner join t_user u on m.userid = u.id
	</sql>
	

	<select id="getAllMusic" resultMap="musicmap1" >
		<include refid="sql1"/>
	</select>
	
	
	<select id="getMyMusic" resultMap="musicmap1" parameterType="int">
		<include refid="sql1"/>
		where u.id = #{id}
	</select>
	
	
	<insert id="addMusic" parameterType="Music">
		insert into t_music(name , singer , special , userid,uploadtime,uploadname) 
		values(#{name},#{singer} ,#{special}, #{uploadUser.id} , now() , #{uploadName})
	</insert>
	
	<select id="getMusicById" resultMap="musicmap1" parameterType="int">
		<include refid="sql1"/>  
		where m.id = #{id}
	</select>
	
	
	<select id="getMusicListInfo" resultMap="musicmap2" parameterType="map">
		select 
			m.id as mid,
			m.name,
			m.singer,
			m.special,
			m.uploadtime,
			m.uploadname,
			u.id as uid,
			u.username,
			(select count(*) from t_collection where mid = m.id and uid = #{uid} as count)    
		from t_music m inner join t_user u on m.userid = u.id
		where m.name like '%${name}%'  limit ${start} , ${end}
	</select>
	
	<select id="getMusicListCount"  parameterType="string" resultType="int">
		  select count(*) as count 
		from t_music m inner join t_user u on m.userid = u.id   
		where  m.name like '%${name}%'    
	</select>
	
	
</mapper>